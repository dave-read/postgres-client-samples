#!/usr/bin/env python

import os
import psycopg2
from uritools import urisplit

# get parameters from env
host = os.environ['hostname']
user = os.environ['username']
dbname = os.environ['database']
password = os.environ['password']
uri = os.environ["uri"]

# default ssl mode
sslmode = "require"

def do_query(connection_string):
  conn = psycopg2.connect(connection_string) 
  print "Connection established using:"+connection_string
  cursor = conn.cursor()
  # Fetch all rows from table
  cursor.execute("SELECT * FROM inventory;")
  rows = cursor.fetchall()
  # Print all rows
  for row in rows:
    print "Data row = (%s, %s, %s)" %(str(row[0]), str(row[1]), str(row[2]))
    # clean up
  print ""
  conn.commit()
  cursor.close()
  conn.close()

# Query using connection properties
print "Using connection properties ..."
connect_string_from_properties = "host={0} user={1} dbname={2} password={3} sslmode={4}".format(host, user, dbname, password, sslmode)
do_query(connect_string_from_properties)

print "Using URI ..."
# Query again using uri directly 
do_query(uri)

print "Using parsed URI ..."
# Query using parsed uri
uri_parts = urisplit(uri)
uriHost = uri_parts.gethost()
uriPath = uri_parts.getpath()
uriUserInfo = uri_parts.getuserinfo()
(uriUser, uriPassword) = uriUserInfo.split(":",1) 
#parsed_conn_string = "host={0} user={1} dbname={2} password={3} sslmode={4}".format(host, user, dbname, password, sslmode)
parsed_conn_string = "host={0} user={1} dbname={2} password={3}".format(host, user, dbname, password)
do_query(parsed_conn_string)


print "done"